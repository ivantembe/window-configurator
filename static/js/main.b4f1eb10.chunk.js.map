{"version":3,"sources":["components/childComponents/Material.jsx","components/childComponents/Bauform.jsx","components/childComponents/Verglassung.jsx","components/childComponents/Masse.jsx","components/childComponents/Ergebniss.jsx","components/childComponents/Aside.jsx","components/childComponents/RenderAllComponents.jsx","service/fakeUserInterfaceDataService.js","service/fakeServerDataService.js","components/Konfigurator.jsx","App.js","serviceWorker.js","index.js"],"names":["Meta","Material","this","props","getData","imageSource","materialOnClick","clickedElement","cardOnClick","card","console","log","className","map","data","material","key","type","hoverable","style","cover","src","alt","onClick","price","title","description","Component","Bauform","bauformOnClick","bauform","Verglassung","verglassungOnClick","verglassung","Masse","onBreiteChange","onHoeheChange","inputMasse","input","width","marginRight","min","max","placeholder","onChange","Ergebniss","materialPrice","verglassungPrice","getServerData","materialSelected","bauformSelected","verglassungSelected","breite","hoehe","breiteInMeter","hoeheInMeter","hersteller","margin","name","toFixed","marginBottom","Aside","icon","bordered","padding","color","marginTop","Panel","RenderAllComponents","serverData","materialClicked","bauformClicked","verglassungClicked","display","justifyContent","backgroundColor","accordion","defaultActiveKey","expandIcon","isActive","header","DATA","_id","Konfigurator","state","handleMaterialOnClick","setState","handleBauformOnClick","handleVerglassungOnClick","handleBreiteOnChange","value","handleHoeheOnChange","App","height","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yQAEQA,E,IAAAA,KAsCOC,EApCf,iLACY,IAAD,EAQHC,KAAKC,MANPC,EAFK,EAELA,QACAC,EAHK,EAGLA,YACAC,EAJK,EAILA,gBACAC,EALK,EAKLA,eACAC,EANK,EAMLA,YACAC,EAPK,EAOLA,KAKF,OAFAC,QAAQC,IAAIH,EAAaC,GAGvB,yBAAKG,UAAU,UACZR,EAAQS,KAAI,SAAAC,GAAI,OACfA,EAAKC,SAASF,KAAI,SAAAE,GAAQ,OACxB,uBACEC,IAAKD,EAASE,KACdC,WAAS,EACTC,MAAOJ,EAASE,OAASV,EAAiBC,EAAcC,EACxDW,MAAO,yBAAKC,IAAKhB,EAAaiB,IAAKP,EAASE,OAC5CM,QAAS,kBAAMjB,EAAgBS,EAASE,KAAMF,EAASS,SAEvD,kBAACxB,EAAD,CACEyB,MAAOV,EAASE,KAChBS,YAAW,cAASX,EAASS,MAAlB,uBA1B3B,GAA8BG,aCFtB3B,E,IAAAA,KAiCO4B,EA/Bf,iLACY,IAAD,EAQH1B,KAAKC,MANPC,EAFK,EAELA,QACAyB,EAHK,EAGLA,eACAxB,EAJK,EAILA,YACAE,EALK,EAKLA,eACAE,EANK,EAMLA,KACAD,EAPK,EAOLA,YAGF,OACE,yBAAKI,UAAU,UACZR,EAAQS,KAAI,SAAAC,GAAI,OACfA,EAAKgB,QAAQjB,KAAI,SAAAiB,GAAO,OACtB,uBACEd,IAAKc,EAAQb,KACbC,WAAS,EACTC,MAAOW,EAAQb,OAASV,EAAiBC,EAAcC,EACvDW,MAAO,yBAAKC,IAAKhB,EAAaiB,IAAKQ,EAAQb,OAC3CM,QAAS,kBAAMM,EAAeC,EAAQb,QAEtC,kBAAC,EAAD,CAAMQ,MAAOK,EAAQb,mBAtBnC,GAA6BU,aCFrB3B,E,IAAAA,KAsCO+B,EApCf,iLACY,IAAD,EAQH7B,KAAKC,MANPC,EAFK,EAELA,QACA4B,EAHK,EAGLA,mBACA3B,EAJK,EAILA,YACAE,EALK,EAKLA,eACAE,EANK,EAMLA,KACAD,EAPK,EAOLA,YAGF,OACE,yBAAKI,UAAU,UACZR,EAAQS,KAAI,SAAAC,GAAI,OACfA,EAAKmB,YAAYpB,KAAI,SAAAoB,GAAW,OAC9B,uBACEjB,IAAKiB,EAAYhB,KACjBC,WAAS,EACTC,MAAOc,EAAYhB,OAASV,EAAiBC,EAAcC,EAC3DW,MAAO,yBAAKC,IAAKhB,EAAaiB,IAAKW,EAAYhB,OAC/CM,QAAS,kBACPS,EAAmBC,EAAYhB,KAAMgB,EAAYT,SAGnD,kBAAC,EAAD,CACEC,MAAOQ,EAAYhB,KACnBS,YAAW,aAAQO,EAAYT,MAApB,uBA1B3B,GAAiCG,a,iBCwBlBO,EAzBf,iLACY,IAAD,EACmChC,KAAKC,MAAvCgC,EADD,EACCA,eAAgBC,EADjB,EACiBA,cAElBC,EAAa,CAACF,EAAgBC,GAEpC,OACE,6BACGC,EAAWxB,KAAI,SAAAyB,GAAK,OACnB,uBACEtB,IAAKsB,EACLnB,MAAO,CAAEoB,MAAO,OAAQC,YAAa,MACrCC,IAAK,IACLC,IAAK,IACLC,YACEL,IAAUH,EAAiB,eAAiB,gBAE9CS,SAAUN,YAjBtB,GAA2BX,aCDnB3B,E,IAAAA,KA0GO6C,EAxGf,iLACY,IAcJC,EAAeC,EAdZ,EAQH7C,KAAKC,MANP6C,EAFK,EAELA,cACAC,EAHK,EAGLA,iBACAC,EAJK,EAILA,gBACAC,EALK,EAKLA,oBACAC,EANK,EAMLA,OACAC,EAPK,EAOLA,MAIIC,EAAgBF,EAAS,IACzBG,EAAeF,EAAQ,IAI7B,OACE,yBAAKzC,UAAU,uBACZoC,EAAcQ,WAAW3C,KAAI,SAAA2C,GAAU,OACtC,uBACErC,MAAO,CACLoB,MAAO,MACPkB,OAAQ,aAEVzC,IAAKwC,EAAWE,KAChBjC,MAAO+B,EAAWE,MAElB,kBAAC,EAAD,MAEA,8BACGF,EAAWzC,SAASF,KAAI,SAAAE,GAAQ,OAC/BA,EAASE,OAASgC,EAChB,yBAAKrC,UAAU,0BACb,0BAAMI,IAAKD,EAASE,MAAOF,EAASE,MACpC,0BAAML,UAAU,qBACbG,EAASS,MAAT,UACOsB,EAAgB/B,EAASS,MAAMmC,QAAQ,IAC3C,KAIR,OAKN,8BACGH,EAAW1B,QAAQjB,KAAI,SAAAiB,GAAO,OAC7BA,EAAQb,OAASiC,EACf,yBAAKtC,UAAU,0BACb,0BAAMI,IAAKc,EAAQb,MAAOa,EAAQb,MAClC,0BAAML,UAAU,qBACbkB,EAAQN,MAAR,UAAmBM,EAAQN,MAAMmC,QAAQ,IAAO,MAIrD,OAKN,8BACGH,EAAWvB,YAAYpB,KAAI,SAAAoB,GAAW,OACrCA,EAAYhB,OAASkC,EACnB,yBAAKvC,UAAU,0BACb,0BAAMI,IAAKiB,EAAYhB,MAAOgB,EAAYhB,MAC1C,0BAAML,UAAU,qBACbqB,EAAYT,MAAZ,UACOuB,EAAmBd,EAAYT,MAAMmC,QAAQ,IACjD,KAIR,OAKN,yBAAKxC,MAAO,CAAEyC,aAAc,OAC1B,8BAAOR,GAAUC,EAAV,aAAwBD,EAAxB,iBAAuCC,GAAU,KAEnD,IAEP,yBAAKzC,UAAU,oCACb,8CACC0C,GACDC,GACAR,GACAD,EAHC,8BAMGQ,EAAgBC,EAAeR,GAC9B,EAAIQ,EAAe,EAAID,GAAiBR,GACzCa,QAAQ,GARX,SASG,aA/FlB,GAA+BhC,aCgDhBkC,EAjDf,iLACY,IAAD,EACmD3D,KAAKC,MAAvDY,EADD,EACCA,SAAUe,EADX,EACWA,QAASG,EADpB,EACoBA,YAAamB,EADjC,EACiCA,OAAQC,EADzC,EACyCA,MAE1CS,EAAO,uBAAM7C,KAAK,gBAGxB,OACE,6BACE,uBACEQ,MAAM,qBACNsC,UAAU,EACV5C,MAAO,CAAE6C,QAAS,SAElB,yBAAKpD,UAAU,cACb,4CACA,0BAAMA,UAAU,iBAAiBG,IAEnC,yBAAKH,UAAU,cACb,2CACA,0BAAMA,UAAU,iBAAiBkB,IAGnC,yBAAKlB,UAAU,cACb,+CACA,0BAAMA,UAAU,iBAAiBqB,IAGnC,yBAAKrB,UAAU,cACb,gDACA,0BAAMA,UAAU,iBAAhB,MACMwC,EADN,SACoBC,IAItB,yBAAKlC,MAAO,CAAE8C,MAAO,MAAOC,UAAW,OACwB,MAA3DnD,GAAYe,GAAWG,GAAemB,GAAUC,GAC9CS,EACA,GACyD,MAA3D/C,GAAYe,GAAWG,GAAemB,GAAUC,GAlC1C,uCAoCJ,UAzChB,GAA2B1B,aCKnBwC,E,IAAAA,MAmHOC,EAjHf,iLACY,IAAD,EAkBHlE,KAAKC,MAhBPC,EAFK,EAELA,QACAiE,EAHK,EAGLA,WACAhE,EAJK,EAILA,YACAU,EALK,EAKLA,SACAe,EANK,EAMLA,QACAG,EAPK,EAOLA,YACAmB,EARK,EAQLA,OACAC,EATK,EASLA,MACA/C,EAVK,EAULA,gBACAgE,EAXK,EAWLA,gBACAzC,EAZK,EAYLA,eACA0C,EAbK,EAaLA,eACAvC,EAdK,EAcLA,mBACAwC,EAfK,EAeLA,mBACArC,EAhBK,EAgBLA,eACAC,EAjBK,EAiBLA,cAGI3B,EAAO,CACXgE,QAAS,eACTC,eAAgB,SAChBjB,OAAQ,aAEJjD,EAAc,CAClBmE,gBAAiB,UACjBlB,OAAQ,aAGV,OACE,yBAAK7C,UAAU,UACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACER,QAASA,EACTW,SAAUA,EACVe,QAASA,EACTG,YAAaA,EACbmB,OAAQA,EACRC,MAAOA,KAGX,uBACEzC,UAAU,cACVgE,WAAS,EACTb,UAAU,EACVc,iBAAkB,CAAC,KACnBC,WAAY,gBAAGC,EAAH,EAAGA,SAAH,OACV,uBAAM9D,KAAM8D,EAAW,eAAiB,kBAG1C,kBAACZ,EAAD,CAAOa,OAAO,WAAWhE,IAAI,IAAIJ,UAAU,SACzC,+DACA,kBAAC,EAAD,CACER,QAASA,EACTE,gBAAiBA,EACjBC,eAAgB+D,EAChBjE,YAAaA,EACbI,KAAMA,EACND,YAAaA,KAIjB,kBAAC2D,EAAD,CAAOa,OAAO,UAAUhE,IAAI,IAAIJ,UAAU,SACxC,8DACA,kBAAC,EAAD,CACER,QAASA,EACTyB,eAAgBA,EAChBtB,eAAgBgE,EAChBlE,YAAaA,EACbI,KAAMA,EACND,YAAaA,KAIjB,kBAAC2D,EAAD,CAAOa,OAAO,cAAchE,IAAI,IAAIJ,UAAU,SAC5C,kEACA,kBAAC,EAAD,CACER,QAASA,EACT4B,mBAAoBA,EACpBzB,eAAgBiE,EAChBnE,YAAaA,EACbI,KAAMA,EACND,YAAaA,KAIjB,kBAAC2D,EAAD,CAAOa,OAAO,UAAOhE,IAAI,IAAIJ,UAAU,SACrC,oEACA,kBAAC,EAAD,CACER,QAASA,EACT+B,eAAgBA,EAChBC,cAAeA,KAInB,kBAAC+B,EAAD,CAAOa,OAAO,YAAYhE,IAAI,IAAIJ,UAAU,SAC1C,kBAAC,EAAD,CACEoC,cAAeqB,EACfpB,iBAAkBqB,EAClBpB,gBAAiBqB,EACjBpB,oBAAqBqB,EACrBpB,OAAQA,EACRC,MAAOA,WAxGrB,GAAyC1B,aCVnCsD,EAAO,CACX,CACEC,IAAK,EACL1B,WAAY,iBACZzC,SAAU,CACR,CACEmE,IAAK,KACLjE,KAAM,WACNO,MAAO,IAET,CACE0D,IAAK,KACLjE,KAAM,OACNO,MAAO,IAET,CACE0D,IAAK,KACLjE,KAAM,WACNO,MAAO,KAGXM,QAAS,CACP,CAAEoD,IAAK,MAAOjE,KAAM,oBACpB,CAAEiE,IAAK,MAAOjE,KAAM,qBAEtBgB,YAAa,CACX,CACEhB,KAAM,SACNO,MAAO,IAET,CACEP,KAAM,SACNO,MAAO,OChCf,IAAMyD,EAAO,CACXzB,WAAY,CACV,CACE0B,IAAK,EACLxB,KAAM,iBACN3C,SAAU,CACR,CACEE,KAAM,WACNO,MAAO,IAET,CACEP,KAAM,OACNO,MAAO,IAET,CACEP,KAAM,WACNO,MAAO,KAGXM,QAAS,CAAC,CAAEb,KAAM,oBAAsB,CAAEA,KAAM,qBAChDgB,YAAa,CACX,CACEhB,KAAM,SACNO,MAAO,IAET,CACEP,KAAM,SACNO,MAAO,MAIb,CACE0D,IAAK,EACLxB,KAAM,iBACN3C,SAAU,CACR,CACEE,KAAM,WACNO,MAAO,IAET,CACEP,KAAM,OACNO,MAAO,IAET,CACEP,KAAM,WACNO,MAAO,KAGXM,QAAS,CAAC,CAAEb,KAAM,oBAAsB,CAAEA,KAAM,qBAChDgB,YAAa,CACX,CACEhB,KAAM,SACNO,MAAO,IAET,CACEP,KAAM,SACNO,MAAO,MAIb,CACE0D,IAAK,EACLxB,KAAM,iBACN3C,SAAU,CACR,CACEE,KAAM,WACNO,MAAO,IAET,CACEP,KAAM,OACNO,MAAO,IAET,CACEP,KAAM,WACNO,MAAO,KAGXM,QAAS,CAAC,CAAEb,KAAM,oBAAsB,CAAEA,KAAM,qBAChDgB,YAAa,CACX,CACEhB,KAAM,SACNO,MAAO,IAET,CACEP,KAAM,SACNO,MAAO,QChFV,IAiFQ2D,EAjFf,2MACEC,MAAQ,CACNH,KFgCKA,EE/BLZ,WDqFKY,ECpFL5E,YAAa,sCACbU,SAAU,GACVe,QAAS,GACTG,YAAa,GACbmB,OAAQ,GACRC,MAAO,IATX,EAYEgC,sBAAwB,SAACtE,EAAU+B,GACjC,EAAKwC,SAAS,CACZvE,WACA+B,mBAfN,EAmBEyC,qBAAuB,SAAAzD,GACrB,EAAKwD,SAAS,CACZxD,aArBN,EAyBE0D,yBAA2B,SAACvD,EAAac,GACvC,EAAKuC,SAAS,CACZrD,cACAc,sBA5BN,EAgCE0C,qBAAuB,SAAAC,GACrB,EAAKJ,SAAS,CACZlC,OAAQsC,KAlCd,EAsCEC,oBAAsB,SAAAD,GACpB,EAAKJ,SAAS,CACZjC,MAAOqC,KAxCb,wEA4CY,IAAD,EAUHxF,KAAKkF,MARPH,EAFK,EAELA,KACAZ,EAHK,EAGLA,WACAhE,EAJK,EAILA,YACAU,EALK,EAKLA,SACAe,EANK,EAMLA,QACAG,EAPK,EAOLA,YACAmB,EARK,EAQLA,OACAC,EATK,EASLA,MAKF,OAFA3C,QAAQC,IAAI,cAAgBsE,GAG1B,kBAAC,EAAD,CACE7E,QAAS6E,EACTZ,WAAYA,EACZhE,YAAaA,EACbU,SAAUA,EACVe,QAASA,EACTG,YAAaA,EACbmB,OAAQA,EACRC,MAAOA,EACP/C,gBAAiBJ,KAAKmF,sBACtBf,gBAAiBvD,EACjBc,eAAgB3B,KAAKqF,qBACrBhB,eAAgBzC,EAChBE,mBAAoB9B,KAAKsF,yBACzBhB,mBAAoBvC,EACpBE,eAAgBjC,KAAKuF,qBACrBrD,cAAelC,KAAKyF,0BA3E5B,GAAkChE,aCMnBiE,MARf,WACE,OACE,yBAAKzE,MAAO,CAAE0E,OAAQ,QAASlB,gBAAiB,YAC9C,kBAAC,EAAD,QCMcmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.b4f1eb10.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Card } from \"antd\";\nconst { Meta } = Card;\n\nexport class Material extends Component {\n  render() {\n    const {\n      getData,\n      imageSource,\n      materialOnClick,\n      clickedElement,\n      cardOnClick,\n      card\n    } = this.props;\n\n    console.log(cardOnClick, card);\n\n    return (\n      <div className=\"d-flex\">\n        {getData.map(data =>\n          data.material.map(material => (\n            <Card\n              key={material.type}\n              hoverable\n              style={material.type === clickedElement ? cardOnClick : card}\n              cover={<img src={imageSource} alt={material.type} />}\n              onClick={() => materialOnClick(material.type, material.price)}\n            >\n              <Meta\n                title={material.type}\n                description={`_ab ${material.price} EURO`}\n              />\n            </Card>\n          ))\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Material;\n","import React, { Component } from \"react\";\nimport { Card } from \"antd\";\nconst { Meta } = Card;\n\nexport class Bauform extends Component {\n  render() {\n    const {\n      getData,\n      bauformOnClick,\n      imageSource,\n      clickedElement,\n      card,\n      cardOnClick\n    } = this.props;\n\n    return (\n      <div className=\"d-flex\">\n        {getData.map(data =>\n          data.bauform.map(bauform => (\n            <Card\n              key={bauform.type}\n              hoverable\n              style={bauform.type === clickedElement ? cardOnClick : card}\n              cover={<img src={imageSource} alt={bauform.type} />}\n              onClick={() => bauformOnClick(bauform.type)}\n            >\n              <Meta title={bauform.type} />\n            </Card>\n          ))\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Bauform;\n","import React, { Component } from \"react\";\nimport { Card } from \"antd\";\nconst { Meta } = Card;\n\nexport class Verglassung extends Component {\n  render() {\n    const {\n      getData,\n      verglassungOnClick,\n      imageSource,\n      clickedElement,\n      card,\n      cardOnClick\n    } = this.props;\n\n    return (\n      <div className=\"d-flex\">\n        {getData.map(data =>\n          data.verglassung.map(verglassung => (\n            <Card\n              key={verglassung.type}\n              hoverable\n              style={verglassung.type === clickedElement ? cardOnClick : card}\n              cover={<img src={imageSource} alt={verglassung.type} />}\n              onClick={() =>\n                verglassungOnClick(verglassung.type, verglassung.price)\n              }\n            >\n              <Meta\n                title={verglassung.type}\n                description={`ab ${verglassung.price} EURO`}\n              />\n            </Card>\n          ))\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Verglassung;\n","import React, { Component } from \"react\";\nimport { InputNumber } from \"antd\";\n\nexport class Masse extends Component {\n  render() {\n    const { onBreiteChange, onHoeheChange } = this.props;\n\n    const inputMasse = [onBreiteChange, onHoeheChange];\n\n    return (\n      <div>\n        {inputMasse.map(input => (\n          <InputNumber\n            key={input}\n            style={{ width: \"auto\", marginRight: \"4%\" }}\n            min={900}\n            max={2000}\n            placeholder={\n              input === onBreiteChange ? \"Gesamtbreite\" : \"Gesamthöhe\"\n            }\n            onChange={input}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Masse;\n","import React, { Component } from \"react\";\nimport { Card } from \"antd\";\nconst { Meta } = Card;\n\nexport class Ergebniss extends Component {\n  render() {\n    const {\n      getServerData,\n      materialSelected,\n      bauformSelected,\n      verglassungSelected,\n      breite,\n      hoehe\n    } = this.props;\n\n    //(Höhe x Breite x verglassungPrice) + ((2 x Höhe) + (2x Breite)) x MeterialPrice\n    const breiteInMeter = breite / 1000;\n    const hoeheInMeter = hoehe / 1000;\n\n    let materialPrice, verglassungPrice;\n\n    return (\n      <div className=\"ergebniss-container\">\n        {getServerData.hersteller.map(hersteller => (\n          <Card\n            style={{\n              width: \"50%\",\n              margin: \"0 1% 1% 0\"\n            }}\n            key={hersteller.name}\n            title={hersteller.name}\n          >\n            <Meta />\n            {/* Material */}\n            <span>\n              {hersteller.material.map(material =>\n                material.type === materialSelected ? (\n                  <div className=\"ergebniss-card-content\">\n                    <span key={material.type}>{material.type}</span>\n                    <span className=\"ergebniss-info-ml\">\n                      {material.price\n                        ? `${(materialPrice = material.price.toFixed(2))}`\n                        : \"\"}\n                    </span>\n                  </div>\n                ) : (\n                  \"\"\n                )\n              )}\n            </span>\n            {/* Bauform */}\n            <span>\n              {hersteller.bauform.map(bauform =>\n                bauform.type === bauformSelected ? (\n                  <div className=\"ergebniss-card-content\">\n                    <span key={bauform.type}>{bauform.type}</span>\n                    <span className=\"ergebniss-info-ml\">\n                      {bauform.price ? `${bauform.price.toFixed(2)}` : \"-\"}\n                    </span>\n                  </div>\n                ) : (\n                  \"\"\n                )\n              )}\n            </span>\n            {/* Verglassung */}\n            <span>\n              {hersteller.verglassung.map(verglassung =>\n                verglassung.type === verglassungSelected ? (\n                  <div className=\"ergebniss-card-content\">\n                    <span key={verglassung.type}>{verglassung.type}</span>\n                    <span className=\"ergebniss-info-ml\">\n                      {verglassung.price\n                        ? `${(verglassungPrice = verglassung.price.toFixed(2))}`\n                        : \"\"}\n                    </span>\n                  </div>\n                ) : (\n                  \"\"\n                )\n              )}\n            </span>\n            {/* Maße */}\n            <div style={{ marginBottom: \"2%\" }}>\n              <span>{breite && hoehe ? `B: ${breite} x H: ${hoehe}` : \"\"}</span>\n              {/* <div>{hoehe ? `Höhe: ${hoehe} mm` : \"\"}</div> */}\n            </div>{\" \"}\n            {/* Gesamtpreis */}\n            <div className=\"ergebniss-card-content text-bold\">\n              <span>Gesamtpreis:</span>\n              {breiteInMeter &&\n              hoeheInMeter &&\n              verglassungPrice &&\n              materialPrice\n                ? ` \n                ${(\n                  breiteInMeter * hoeheInMeter * verglassungPrice +\n                  (2 * hoeheInMeter + 2 * breiteInMeter) * materialPrice\n                ).toFixed(2)} EURO`\n                : \"\"}\n            </div>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Ergebniss;\n","import React, { Component } from \"react\";\nimport { Card, Icon } from \"antd\";\n\nexport class Aside extends Component {\n  render() {\n    const { material, bauform, verglassung, breite, hoehe } = this.props;\n\n    const icon = <Icon type=\"info-circle\" />;\n    const message = \" Bitte wählen Sie alle Felder aus\";\n\n    return (\n      <div>\n        <Card\n          title=\"IHRE KONFIGURATION\"\n          bordered={false}\n          style={{ padding: \"20px\" }}\n        >\n          <div className=\"aside-info\">\n            <span>Maaterial:</span>\n            <span className=\"aside-info-ml\">{material}</span>\n          </div>\n          <div className=\"aside-info\">\n            <span>Bauform: </span>\n            <span className=\"aside-info-ml\">{bauform}</span>\n          </div>\n\n          <div className=\"aside-info\">\n            <span>Verglassung: </span>\n            <span className=\"aside-info-ml\">{verglassung}</span>\n          </div>\n\n          <div className=\"aside-info\">\n            <span>Maße (mm): </span>\n            <span className=\"aside-info-ml\">\n              B: {breite} x H: {hoehe}\n            </span>\n          </div>\n\n          <div style={{ color: \"red\", marginTop: \"6%\" }}>\n            {(material && bauform && verglassung && breite && hoehe) === \"\"\n              ? icon\n              : \"\"}\n            {(material && bauform && verglassung && breite && hoehe) === \"\"\n              ? message\n              : \"\"}\n          </div>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Aside;\n","import React, { Component } from \"react\";\nimport Material from \"./Material\";\nimport Bauform from \"./Bauform\";\nimport Verglassung from \"./Verglassung\";\nimport Masse from \"./Masse\";\nimport Ergebniss from \"./Ergebniss\";\nimport Aside from \"./Aside\";\nimport { Collapse, Icon } from \"antd\";\nconst { Panel } = Collapse;\n\nexport class RenderAllComponents extends Component {\n  render() {\n    const {\n      getData,\n      serverData,\n      imageSource,\n      material,\n      bauform,\n      verglassung,\n      breite,\n      hoehe,\n      materialOnClick,\n      materialClicked,\n      bauformOnClick,\n      bauformClicked,\n      verglassungOnClick,\n      verglassungClicked,\n      onBreiteChange,\n      onHoeheChange\n    } = this.props;\n\n    const card = {\n      display: \"inline-block\",\n      justifyContent: \"center\",\n      margin: \"0 4% 4% 0\"\n    };\n    const cardOnClick = {\n      backgroundColor: \"#90949c\",\n      margin: \"0 4% 4% 0\"\n    };\n\n    return (\n      <div className=\"layout\">\n        <div className=\"layout-aside\">\n          <Aside\n            getData={getData}\n            material={material}\n            bauform={bauform}\n            verglassung={verglassung}\n            breite={breite}\n            hoehe={hoehe}\n          />\n        </div>\n        <Collapse\n          className=\"layout-main\"\n          accordion\n          bordered={false}\n          defaultActiveKey={[\"0\"]}\n          expandIcon={({ isActive }) => (\n            <Icon type={isActive ? \"minus-circle\" : \"plus-circle\"} />\n          )}\n        >\n          <Panel header=\"MATERIAL\" key=\"1\" className=\"panel\">\n            <p>Bitte wählen Sie das Material</p>\n            <Material\n              getData={getData}\n              materialOnClick={materialOnClick}\n              clickedElement={materialClicked}\n              imageSource={imageSource}\n              card={card}\n              cardOnClick={cardOnClick}\n            />\n          </Panel>\n\n          <Panel header=\"BAUFORM\" key=\"2\" className=\"panel\">\n            <p>Bitte wählen Sie die Bauform</p>\n            <Bauform\n              getData={getData}\n              bauformOnClick={bauformOnClick}\n              clickedElement={bauformClicked}\n              imageSource={imageSource}\n              card={card}\n              cardOnClick={cardOnClick}\n            />\n          </Panel>\n\n          <Panel header=\"VERGLASSUNG\" key=\"3\" className=\"panel\">\n            <p>Bitte wählen Sie die Verglassung</p>\n            <Verglassung\n              getData={getData}\n              verglassungOnClick={verglassungOnClick}\n              clickedElement={verglassungClicked}\n              imageSource={imageSource}\n              card={card}\n              cardOnClick={cardOnClick}\n            />\n          </Panel>\n\n          <Panel header=\"MAßE\" key=\"4\" className=\"panel\">\n            <p>Bitte wählen Sie die Maße in mm</p>\n            <Masse\n              getData={getData}\n              onBreiteChange={onBreiteChange}\n              onHoeheChange={onHoeheChange}\n            />\n          </Panel>\n\n          <Panel header=\"ERGEBNISS\" key=\"5\" className=\"panel\">\n            <Ergebniss\n              getServerData={serverData}\n              materialSelected={materialClicked}\n              bauformSelected={bauformClicked}\n              verglassungSelected={verglassungClicked}\n              breite={breite}\n              hoehe={hoehe}\n            />\n          </Panel>\n        </Collapse>\n      </div>\n    );\n  }\n}\n\nexport default RenderAllComponents;\n","const DATA = [\n  {\n    _id: 1,\n    hersteller: \"Hersteller - A\",\n    material: [\n      {\n        _id: \"01\",\n        type: \"Kunstoff\",\n        price: 20\n      },\n      {\n        _id: \"02\",\n        type: \"Holz\",\n        price: 25\n      },\n      {\n        _id: \"03\",\n        type: \"Alumnium\",\n        price: 30\n      }\n    ],\n    bauform: [\n      { _id: \"001\", type: \"1-Teiler-Fenster\" },\n      { _id: \"002\", type: \"2-Teiler-Fenster\" }\n    ],\n    verglassung: [\n      {\n        type: \"1-Fach\",\n        price: 10\n      },\n      {\n        type: \"2-Fach\",\n        price: 15\n      }\n    ]\n  }\n];\n\nexport function getUserInterfaceDATA() {\n  return DATA;\n}\n","const DATA = {\n  hersteller: [\n    {\n      _id: 1,\n      name: \"Hersteller - A\",\n      material: [\n        {\n          type: \"Kunstoff\",\n          price: 20\n        },\n        {\n          type: \"Holz\",\n          price: 25\n        },\n        {\n          type: \"Alumnium\",\n          price: 30\n        }\n      ],\n      bauform: [{ type: \"1-Teiler-Fenster\" }, { type: \"2-Teiler-Fenster\" }],\n      verglassung: [\n        {\n          type: \"1-Fach\",\n          price: 10\n        },\n        {\n          type: \"2-Fach\",\n          price: 15\n        }\n      ]\n    },\n    {\n      _id: 2,\n      name: \"Hersteller - B\",\n      material: [\n        {\n          type: \"Kunstoff\",\n          price: 23\n        },\n        {\n          type: \"Holz\",\n          price: 27\n        },\n        {\n          type: \"Alumnium\",\n          price: 33\n        }\n      ],\n      bauform: [{ type: \"1-Teiler-Fenster\" }, { type: \"2-Teiler-Fenster\" }],\n      verglassung: [\n        {\n          type: \"1-Fach\",\n          price: 13\n        },\n        {\n          type: \"2-Fach\",\n          price: 17\n        }\n      ]\n    },\n    {\n      _id: 3,\n      name: \"Hersteller - C\",\n      material: [\n        {\n          type: \"Kunstoff\",\n          price: 26\n        },\n        {\n          type: \"Holz\",\n          price: 30\n        },\n        {\n          type: \"Alumnium\",\n          price: 36\n        }\n      ],\n      bauform: [{ type: \"1-Teiler-Fenster\" }, { type: \"2-Teiler-Fenster\" }],\n      verglassung: [\n        {\n          type: \"1-Fach\",\n          price: 16\n        },\n        {\n          type: \"2-Fach\",\n          price: 20\n        }\n      ]\n    }\n  ]\n};\n\nexport function getServerDATA() {\n  return DATA;\n}\n","import React, { Component } from \"react\";\nimport RenderAllComponents from \"./childComponents/RenderAllComponents\";\nimport { getUserInterfaceDATA } from \"../service/fakeUserInterfaceDataService\";\nimport { getServerDATA } from \"../service/fakeServerDataService\";\n\nexport class Konfigurator extends Component {\n  state = {\n    DATA: getUserInterfaceDATA(),\n    serverData: getServerDATA(),\n    imageSource: \"https://via.placeholder.com/210X150\",\n    material: \"\",\n    bauform: \"\",\n    verglassung: \"\",\n    breite: \"\",\n    hoehe: \"\"\n  };\n\n  handleMaterialOnClick = (material, materialPrice) => {\n    this.setState({\n      material,\n      materialPrice\n    });\n  };\n\n  handleBauformOnClick = bauform => {\n    this.setState({\n      bauform\n    });\n  };\n\n  handleVerglassungOnClick = (verglassung, verglassungPrice) => {\n    this.setState({\n      verglassung,\n      verglassungPrice\n    });\n  };\n\n  handleBreiteOnChange = value => {\n    this.setState({\n      breite: value\n    });\n  };\n\n  handleHoeheOnChange = value => {\n    this.setState({\n      hoehe: value\n    });\n  };\n\n  render() {\n    const {\n      DATA,\n      serverData,\n      imageSource,\n      material,\n      bauform,\n      verglassung,\n      breite,\n      hoehe\n    } = this.state;\n\n    console.log(\"I AM DATA: \" + DATA);\n\n    return (\n      <RenderAllComponents\n        getData={DATA}\n        serverData={serverData}\n        imageSource={imageSource}\n        material={material}\n        bauform={bauform}\n        verglassung={verglassung}\n        breite={breite}\n        hoehe={hoehe}\n        materialOnClick={this.handleMaterialOnClick}\n        materialClicked={material}\n        bauformOnClick={this.handleBauformOnClick}\n        bauformClicked={bauform}\n        verglassungOnClick={this.handleVerglassungOnClick}\n        verglassungClicked={verglassung}\n        onBreiteChange={this.handleBreiteOnChange}\n        onHoeheChange={this.handleHoeheOnChange}\n      />\n    );\n  }\n}\n\nexport default Konfigurator;\n","import React from \"react\";\nimport Konfigurator from \"./components/Konfigurator\";\n\nfunction App() {\n  return (\n    <div style={{ height: \"100vh\", backgroundColor: \"#f9f9f9\" }}>\n      <Konfigurator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}